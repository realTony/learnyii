<?php
/**
 * Created by PhpStorm.
 * User: Tony
 * Date: 08.02.2019
 * Time: 18:36
 */

namespace app\modules\admin\controllers;

use app\models\User;
use app\models\UserSearch;
use app\models\AuthItem;
use Yii;
use yii\web\Controller;
use app\modules\admin\models\EditUser;

class UserController extends Controller
{
    public $layout = 'ml_admin.php';

    public function beforeAction($action)
    {
        if (Yii::$app->user->isGuest) {
            Yii::$app->response->redirect(['account#login']);
        }

        \Yii::$app->view->params['menu'] = \Yii::$app->getModule('admin')->params['menu'];

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionIndex() : string
    {
        $searchModel = new UserSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    public function actionView($id) : string
    {
        $model = Yii::createObject(User::className())
            ->findOne(['id' => $id]);

        return $this->render('view', [
            'model' => $model
        ]);
    }

    public function actionUpdate($id) : string
    {
        $model = Yii::createObject(EditUser::className());
        $user = Yii::createObject(User::className())
        ->findOne(['id' => $id]);
        $model->username = $user->username;
        $model->email = $user->email;
        $model->id = $id;

        $roles = Yii::createObject(AuthItem::className())
            ->find('id')
            ->where(['type' => 1])
            ->asArray()
            ->all();
        $selectRoles = ['User' => Yii::t('app', 'По умолчанию')];

        foreach ($roles as $role) {
            switch ($role['name']) {
                case 'User':
                    $selectRoles[$role['name']] = Yii::t('app', 'Пользователь');
                    break;
                case 'Admin User':
                    $selectRoles[$role['name']] = Yii::t('app', 'Администратор');
                    break;
                case 'Moderator':
                    $selectRoles[$role['name']] = Yii::t('app', 'Модератор');
                    break;
            }
        }

        if( Yii::$app->request->isPost && $model->load(Yii::$app->request->post()) && $model->edit()) {
            Yii::$app->response->redirect(['/admin/user/index']);
        }
        return $this->render('edit', [
            'model' => $model,
            'roles' => $selectRoles
        ]);
    }

    public function actionDelete($id) : object
    {
        $this->enableCsrfValidation = false;
        $user = Yii::createObject(User::className())
            ->findOne(['id' => $id])->delete();

        return $this->redirect(['index']);
    }
}