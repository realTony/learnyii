<?php
/**
 * Created by PhpStorm.
 * User: Tony
 * Date: 28.01.2019
 * Time: 21:46
 */

namespace app\modules\admin\controllers;


use app\models\AdvertisementPost;
use app\models\AdvertisementPostSearch;
use Yii;
use yii\web\Controller;
use app\modules\admin\models\Categories;


class AdvertisementController extends Controller
{
    public $layout = 'ml_admin.php';

    public function beforeAction($action)
    {
        if (Yii::$app->user->isGuest) {
            Yii::$app->response->redirect(['account#login']);
        }

        $this->enableCsrfValidation = false;
        \Yii::$app->view->params['menu'] = \Yii::$app->getModule('admin')->params['menu'];

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionIndex()
    {
        $searchModel = new AdvertisementPostSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        $this->getView()->title = Yii::t('app', 'Список объявлений');

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    public function actionArchive()
    {
        $searchModel = new AdvertisementPostSearch();
        $dataProvider = $searchModel->searchArchive(Yii::$app->request->queryParams);

        $this->getView()->title = Yii::t('app', 'Список объявлений');

        return $this->render('archive', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    public function actionCreate()
    {
        
    }

    public function actionView()
    {

    }

    public function actionDelete($id)
    {
        $advertisement = new AdvertisementPost();
        $advertisement->findOne(['id' => $id])->delete();

        return $this->redirect(['index']);
    }

    public function actionToArchive($id)
    {
        $advertisement = new AdvertisementPost();
        $post = $advertisement->findOne(['id' => $id]);
        $post->is_archived = true;

        $post->save();

        return $this->redirect(['index']);
    }

    public function actionRestore($id)
    {
        $advertisement = new AdvertisementPost();
        $post = $advertisement->findOne(['id' => $id]);
        $post->is_archived = false;

        $post->save();

        return $this->redirect(['archive']);
    }

    public function actionBan($id)
    {
        $advertisement = new AdvertisementPost();
        $post = $advertisement->findOne(['id' => $id]);
        $post->is_banned = true;

        $post->save();

        return $this->redirect(['index']);
    }
}