<?php

namespace app\modules\myaccount\controllers;

use app\models\AdvertisementPost;
use app\models\Images;
use app\models\ImageUpload;
use app\models\Profile;
use app\models\User;
use Yii;
use yii\data\Pagination;
use yii\helpers\Html;
use yii\helpers\Url;
use yii\web\Controller;
use yii\web\UploadedFile;
use app\modules\myaccount\models\EditProfileForm;
use app\modules\myaccount\models\ChangePassword;
use app\modules\myaccount\models\CreateAdvertisementPost;
use app\modules\admin\models\Categories;

/**
 * Default controller for the `user` module
 */
class DefaultController extends Controller
{
    public static $breadcrumbs  = [];
    /**
     * Renders the index view for the module
     * @return string
     */
    public function behaviors()
    {
        return parent::behaviors(); // TODO: Change the autogenerated stub
    }

    public function beforeAction($action) {
        $this->enableCsrfValidation = ($action->id !== "<action>");
        return parent::beforeAction($action);
    }

    public function actionIndex()
    {
        if( Yii::$app->user->isGuest ){
            Yii::$app->response->redirect(['account#login']);
        }
        self::$breadcrumbs = [
            ['label' => Yii::t('app', 'Личный кабинет')]
        ];
        $user = User::findOne(['id'=>Yii::$app->user->getId()]);
        $profile = Profile::findOne(['user_id'=>Yii::$app->user->getId()]);
        $profile['profile_image'] = (!empty($profile['profile_image']))?'/'.$profile['profile_image']:Yii::getAlias('@web').'/images/empty_user.jpg';

        return $this->render('index.twig',[
            'user' => $user,
            'profile' => $profile,
            'breadcrumbs' => self::$breadcrumbs
        ]);
    }

    public function actionEdit()
    {
        if( Yii::$app->user->isGuest ){
            Yii::$app->response->redirect(['account#login']);
        }
        self::$breadcrumbs = [
            ['label' => Yii::t('app', 'Личный кабинет'), 'url' => [ Url::toRoute(['/myaccount']) ]],
            ['label' => Yii::t('app', 'Редактировать профиль')],
        ];

        $user = User::findOne(['id'=>Yii::$app->user->getId()]);
        $profile = Profile::findOne(['user_id'=>Yii::$app->user->getId()]);
        $profile['profile_image'] = (!empty($profile['profile_image']))?'/'.$profile['profile_image']:Yii::getAlias('@web').'/images/empty_user.jpg';

        $editProfile = new EditProfileForm();
        $changePassword = new ChangePassword();
        $uploadImage = new ImageUpload;

        if ( $editProfile->load(Yii::$app->request->post()) && ( $editProfile->editProfile() )) {
            Yii::$app->response->redirect(['myaccount/edit']);
        }
        
        if( $changePassword->load(Yii::$app->request->post()) && $changePassword->changePassword() ) {
            Yii::$app->session->setFlash('success', \Yii::t('app', 'Пароль успешно изменён'));
            return $this->render('/message.php', [
                'title'  => Yii::t('app', 'Изменение пароля'),
                'module' => $this->module,
            ]);

        }
        return $this->render('edit.twig', [
            'model' => $editProfile,
            'changePassword' => $changePassword,
            'uploadImage' => $uploadImage,
            'profile' => $profile,
            'user' => $user,
            'breadcrumbs' => self::$breadcrumbs
        ]);
    }

    public function actionCreateAdvertisement()
    {
        $model = Yii::createObject(AdvertisementPost::className());
        $imgModel = Yii::createObject(Images::className());

        $user = User::findOne(['id'=>Yii::$app->user->getId()]);

        if( Yii::$app->user->isGuest ){
            Yii::$app->response->redirect(['account#login']);
        }
        self::$breadcrumbs = [
            ['label' => Yii::t('app', 'Личный кабинет'), 'url' => [ Url::toRoute(['/myaccount']) ]],
            ['label' => Yii::t('app', 'Создать объявление')],
        ];

        if(Yii::$app->request->post()) {
            $post = Yii::$app->request->post();
            $model->cities = (! empty($post['AdvertisementPost']['city']) )? $post['AdvertisementPost']['city'] : [];
            $model->district = (! empty($post['AdvertisementPost']['city_district']) )? $post['AdvertisementPost']['city_district'] : [];
        }

        if( $model->load(Yii::$app->request->post()) && $id = $model->createAdvertisement() ){
            return $this->redirect(['myaccount/posts']);
        }

        return $this->render('_advertisement_form', [
            'model' => $model,
            'imageModel' => $imgModel,
            'user' => $user,
            'breadcrumbs' => self::$breadcrumbs
        ]);
    }


    public function actionUpdateAdvertisement($id)
    {
        if( Yii::$app->user->isGuest ){
            Yii::$app->response->redirect(['account#login']);
        }

        $model = AdvertisementPost::findOne($id);
        self::$breadcrumbs = [
            ['label' => Yii::t('app', 'Личный кабинет'), 'url' => [ Url::toRoute(['/myaccount']) ]],
            ['label' => Yii::t('app', 'Редактировать объявление')],
        ];

        if( $model->load(Yii::$app->request->post()) && $model->createAdvertisement() ){
            return $this->redirect(['posts']);
        }

        return $this->render('_advertisement_form', [
            'model' => $model,
            'breadcrumbs' => self::$breadcrumbs
        ]);
    }

    /**
     * Remove Advertisement post item
     * @param $id
     * @return mixed
     * @throws \Throwable
     * @throws \yii\db\StaleObjectException
     */
    public function actionDelete($id)
    {
        AdvertisementPost::findOne($id)->delete();

        return $this->redirect(['posts']);
    }

    public function actionUpdateCat()
    {
        if( Yii::$app->request->isAjax) {
            $post = Yii::$app->request->post();

            $id = $post['id'];
            $cat = new Categories();
            $cat->parent = $id;
            $list  = $cat->parents;
            $options = '<option value="">'.Yii::t('app', 'Подкатегория').'</option>';

            foreach ( $list as $item => $val) {
                $options .= '<option value="'.$item.'">'.$val.'</option>';
            }

            return $options;
        }

        return false;
    }

    /**
     * User posts
     * @return mixed
     */
    public function actionPosts()
    {
        $user = User::findOne(['id'=>Yii::$app->user->getId()]);
        $model = new AdvertisementPost();
        $advPosts = $model
            ->find()
            ->where(['authorId' => $user->id]);

        $countQuery = clone $advPosts;
        $pages = new Pagination([
            'totalCount' => $countQuery->count(),
            'pageSize' => 5,

        ]);
        $models = $advPosts->offset($pages->offset)
            ->limit($pages->limit)
            ->all();

        return $this->render('user_posts', [
            'models' => $models,
            'pages' => $pages,
            'user' => $user,
        ]);
    }

    /**
     *
     */
    public function actionSaveImage()
    {
        $profile = Profile::findOne(['user_id'=>Yii::$app->user->getId()]);
        $model = new ImageUpload;
        $editProfile = new EditProfileForm();

        if( \Yii::$app->request->isPost ){
            if(!empty($profile->profile_image) && ! strpos('empty_user', $profile->profile_image )) {
                $model->deleteCurrentImage($profile->profile_image);
            }

            $file = UploadedFile::getInstance($model, 'imageFile');
            $editProfile->saveImage($model->uploadImage($file, $profile->profile_image));
        }
        Yii::$app->response->redirect(['myaccount/edit']);
    }

    /**
     * Ajax method of removing avatar from user profile
     *
     * @return string
     */
    public function actionRemovePhoto()
    {
        \Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;

        $model = new ImageUpload();
        $empty_image = $model->getImage();
        if(Yii::$app->request->isAjax){
            $profile = Profile::findOne(['user_id'=>Yii::$app->user->getId()]);
            $model->deleteCurrentImage($profile->profile_image);
            $profile->profile_image = '/images/empty_user.jpg';
            $profile->save();
        }
        return $empty_image;
    }


}
